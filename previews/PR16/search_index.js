var documenterSearchIndex = {"docs":
[{"location":"API/Samplers/#Samplers","page":"Samplers","title":"Samplers","text":"","category":"section"},{"location":"API/Samplers/","page":"Samplers","title":"Samplers","text":"CurrentModule = RandomFeatures.Samplers","category":"page"},{"location":"API/Samplers/","page":"Samplers","title":"Samplers","text":"Sampler\nFeatureSampler\nget_parameter_distribution\nget_uniform_shift_bounds\nget_rng\nsample(rng::AbstractRNG, s::Sampler, n_draws::Int)","category":"page"},{"location":"API/Samplers/#RandomFeatures.Samplers.Sampler","page":"Samplers","title":"RandomFeatures.Samplers.Sampler","text":"struct Sampler\n\nWraps the parameter distributions used to sample random features\n\nparameter_distribution::EnsembleKalmanProcesses.ParameterDistributions.ParameterDistribution\nA probability distribution, possibly with constraints\nuniform_shift_bounds::Union{Nothing, AbstractVector}\nEither nothing , or [lower bound, upper bound], which defines a uniform distribution used as a random shift\nrng::Random.AbstractRNG\nA random number generator state\n\n\n\n\n\n","category":"type"},{"location":"API/Samplers/#RandomFeatures.Samplers.FeatureSampler","page":"Samplers","title":"RandomFeatures.Samplers.FeatureSampler","text":"FeatureSampler(\n    parameter_distribution::EnsembleKalmanProcesses.ParameterDistributions.ParameterDistribution;\n    uniform_shift_bounds,\n    rng\n) -> Sampler\n\n\nbasic constructor for a Sampler \n\n\n\n\n\n","category":"function"},{"location":"API/Samplers/#RandomFeatures.Samplers.get_parameter_distribution","page":"Samplers","title":"RandomFeatures.Samplers.get_parameter_distribution","text":"get_parameter_distribution(\n    s::Sampler\n) -> EnsembleKalmanProcesses.ParameterDistributions.ParameterDistribution\n\n\ngets the parameter_distribution field \n\n\n\n\n\n","category":"function"},{"location":"API/Samplers/#RandomFeatures.Samplers.get_uniform_shift_bounds","page":"Samplers","title":"RandomFeatures.Samplers.get_uniform_shift_bounds","text":"get_uniform_shift_bounds(\n    s::Sampler\n) -> Union{Nothing, AbstractVector}\n\n\ngets the uniform_shift_bounds field \n\n\n\n\n\n","category":"function"},{"location":"API/Samplers/#RandomFeatures.Samplers.get_rng","page":"Samplers","title":"RandomFeatures.Samplers.get_rng","text":"get_rng(s::Sampler) -> Random.AbstractRNG\n\n\ngets the rng field\n\n\n\n\n\n","category":"function"},{"location":"API/Samplers/#StatsBase.sample-Tuple{Random.AbstractRNG, Sampler, Int64}","page":"Samplers","title":"StatsBase.sample","text":"sample(\n    rng::Random.AbstractRNG,\n    s::Sampler,\n    n_draws::Int64\n) -> EnsembleKalmanProcesses.ParameterDistributions.ParameterDistribution\n\n\nsamples the distribution within s, n_draws times using a random number generator rng. Can be called without rng (defaults to s.rng) or n_draws (defaults to 1)\n\n\n\n\n\n","category":"method"},{"location":"API/Utilities/#Utilities","page":"Utilities","title":"Utilities","text":"","category":"section"},{"location":"API/Utilities/","page":"Utilities","title":"Utilities","text":"CurrentModule = RandomFeatures.Utilities","category":"page"},{"location":"API/Utilities/#Batching","page":"Utilities","title":"Batching","text":"","category":"section"},{"location":"API/Utilities/","page":"Utilities","title":"Utilities","text":"batch_generator","category":"page"},{"location":"API/Utilities/#RandomFeatures.Utilities.batch_generator","page":"Utilities","title":"RandomFeatures.Utilities.batch_generator","text":"batch_generator(\n    array::AbstractArray,\n    batch_size::Int64;\n    dims\n) -> Any\n\n\nproduces batched sub-array views of size batch_size along dimension dims.\n\nnote: Note\nthis creates views not copies. Modifying a batch will modify the original!\n\n\n\n\n\n","category":"function"},{"location":"API/Utilities/#Matrix-Decomposition","page":"Utilities","title":"Matrix Decomposition","text":"","category":"section"},{"location":"API/Utilities/","page":"Utilities","title":"Utilities","text":"Decomposition\nStoredInvType\nFactor\nPseInv\nget_decomposition\nget_full_matrix\nget_parametric_type\nlinear_solve","category":"page"},{"location":"API/Utilities/#RandomFeatures.Utilities.Decomposition","page":"Utilities","title":"RandomFeatures.Utilities.Decomposition","text":"struct Decomposition{T}\n\nStores a matrix along with a decomposition T=Factor, or pseudoinverse T=PseInv\n\nfull_matrix::AbstractMatrix\nThe original matrix\ndecomposition::Union{AbstractMatrix, LinearAlgebra.Factorization}\nThe matrix decomposition, or pseudoinverse\n\n\n\n\n\n","category":"type"},{"location":"API/Utilities/#RandomFeatures.Utilities.StoredInvType","page":"Utilities","title":"RandomFeatures.Utilities.StoredInvType","text":"abstract type StoredInvType\n\nType used as a flag for the stored Decomposition type\n\n\n\n\n\n","category":"type"},{"location":"API/Utilities/#RandomFeatures.Utilities.Factor","page":"Utilities","title":"RandomFeatures.Utilities.Factor","text":"abstract type Factor <: StoredInvType\n\n\n\n\n\n","category":"type"},{"location":"API/Utilities/#RandomFeatures.Utilities.PseInv","page":"Utilities","title":"RandomFeatures.Utilities.PseInv","text":"abstract type PseInv <: StoredInvType\n\n\n\n\n\n","category":"type"},{"location":"API/Utilities/#RandomFeatures.Utilities.get_decomposition","page":"Utilities","title":"RandomFeatures.Utilities.get_decomposition","text":"get_decomposition(\n    d::Decomposition\n) -> Union{AbstractMatrix, LinearAlgebra.Factorization}\n\n\nget decomposition field\n\n\n\n\n\n","category":"function"},{"location":"API/Utilities/#RandomFeatures.Utilities.get_full_matrix","page":"Utilities","title":"RandomFeatures.Utilities.get_full_matrix","text":"get_full_matrix(d::Decomposition) -> AbstractMatrix\n\n\nget full_matrix field\n\n\n\n\n\n","category":"function"},{"location":"API/Utilities/#RandomFeatures.Utilities.get_parametric_type","page":"Utilities","title":"RandomFeatures.Utilities.get_parametric_type","text":"get_parametric_type(d::Decomposition{T}) -> Any\n\n\nget the parametric type\n\n\n\n\n\n","category":"function"},{"location":"API/Utilities/#RandomFeatures.Utilities.linear_solve","page":"Utilities","title":"RandomFeatures.Utilities.linear_solve","text":"linear_solve(\n    d::Decomposition,\n    rhs::AbstractVecOrMat,\n    _::Type{Factor}\n) -> Any\n\n\nSolve the linear system based on Decomposition type\n\n\n\n\n\n","category":"function"},{"location":"API/Features/#Features","page":"Features","title":"Features","text":"","category":"section"},{"location":"API/Features/","page":"Features","title":"Features","text":"CurrentModule = RandomFeatures.Features","category":"page"},{"location":"API/Features/","page":"Features","title":"Features","text":"ScalarFeature\nScalarFourierFeature\nScalarNeuronFeature\nget_n_features\nget_scalar_function\nget_feature_sampler\nget_feature_sample\nget_feature_parameters\nsample(rf::RandomFeature)","category":"page"},{"location":"API/Features/#RandomFeatures.Features.ScalarFeature","page":"Features","title":"RandomFeatures.Features.ScalarFeature","text":"struct ScalarFeature <: RandomFeature\n\nContains information to build and sample RandomFeatures mapping from N-D -> 1-D\n\nn_features::Int64\nNumber of features\nfeature_sampler::Sampler\nSampler of the feature distribution\nscalar_function::ScalarFunction\nScalarFunction mapping R -> R\nfeature_sample::EnsembleKalmanProcesses.ParameterDistributions.ParameterDistribution\nCurrent Sample from sampler\nfeature_parameters::Union{Nothing, Dict}\nhyperparameters in Feature (and not in Sampler)\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.ScalarFourierFeature","page":"Features","title":"RandomFeatures.Features.ScalarFourierFeature","text":"ScalarFourierFeature(\n    n_features::Int64,\n    sampler::Sampler;\n    kwargs...\n) -> ScalarFeature\n\n\nConstructor for a Sampler with cosine features\n\n\n\n\n\n","category":"function"},{"location":"API/Features/#RandomFeatures.Features.ScalarNeuronFeature","page":"Features","title":"RandomFeatures.Features.ScalarNeuronFeature","text":"ScalarNeuronFeature(\n    n_features::Int64,\n    sampler::Sampler;\n    activation_fun,\n    kwargs...\n) -> ScalarFeature\n\n\nConstructor for a Sampler with activation-function features\n\n\n\n\n\n","category":"function"},{"location":"API/Features/#RandomFeatures.Features.get_n_features","page":"Features","title":"RandomFeatures.Features.get_n_features","text":"get_n_features(rf::RandomFeature) -> Any\n\n\ngets the n_features field \n\n\n\n\n\n","category":"function"},{"location":"API/Features/#RandomFeatures.Features.get_scalar_function","page":"Features","title":"RandomFeatures.Features.get_scalar_function","text":"get_scalar_function(rf::ScalarFeature) -> ScalarFunction\n\n\ngets the scalar_function field \n\n\n\n\n\n","category":"function"},{"location":"API/Features/#RandomFeatures.Features.get_feature_sampler","page":"Features","title":"RandomFeatures.Features.get_feature_sampler","text":"get_feature_sampler(rf::RandomFeature) -> Any\n\n\ngets the feature_sampler field \n\n\n\n\n\n","category":"function"},{"location":"API/Features/#RandomFeatures.Features.get_feature_sample","page":"Features","title":"RandomFeatures.Features.get_feature_sample","text":"get_feature_sample(rf::RandomFeature) -> Any\n\n\ngets the feature_sample field \n\n\n\n\n\n","category":"function"},{"location":"API/Features/#RandomFeatures.Features.get_feature_parameters","page":"Features","title":"RandomFeatures.Features.get_feature_parameters","text":"get_feature_parameters(rf::RandomFeature) -> Any\n\n\ngets the feature_parameters field \n\n\n\n\n\n","category":"function"},{"location":"API/Features/#StatsBase.sample-Tuple{RandomFeature}","page":"Features","title":"StatsBase.sample","text":"sample(rf::RandomFeature) -> Any\n\n\nsamples the random feature distribution \n\n\n\n\n\n","category":"method"},{"location":"API/Features/#Scalar-Functions","page":"Features","title":"Scalar Functions","text":"","category":"section"},{"location":"API/Features/","page":"Features","title":"Features","text":"ScalarFunction\nScalarActivation\napply_scalar_function","category":"page"},{"location":"API/Features/#RandomFeatures.Features.ScalarFunction","page":"Features","title":"RandomFeatures.Features.ScalarFunction","text":"abstract type ScalarFunction\n\nType of a function mapping 1D -> 1D\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.ScalarActivation","page":"Features","title":"RandomFeatures.Features.ScalarActivation","text":"abstract type ScalarActivation <: ScalarFunction\n\nType of scalar activation functions\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.apply_scalar_function","page":"Features","title":"RandomFeatures.Features.apply_scalar_function","text":"apply_scalar_function(\n    sf::ScalarFunction,\n    r::AbstractVecOrMat\n) -> Any\n\n\napply the scalar function sf pointwise to vectors or matrices\n\n\n\n\n\n","category":"function"},{"location":"API/Features/","page":"Features","title":"Features","text":"    Cosine\n    Relu\n    Lrelu\n    Gelu\n    Elu\n    Selu\n    Heaviside\n    SmoothHeaviside\n    Sawtooth\n    Softplus\n    Tansig\n    Sigmoid","category":"page"},{"location":"API/Features/#RandomFeatures.Features.Cosine","page":"Features","title":"RandomFeatures.Features.Cosine","text":"struct Cosine <: ScalarFunction\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.Relu","page":"Features","title":"RandomFeatures.Features.Relu","text":"struct Relu <: ScalarActivation\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.Lrelu","page":"Features","title":"RandomFeatures.Features.Lrelu","text":"struct Lrelu <: ScalarActivation\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.Gelu","page":"Features","title":"RandomFeatures.Features.Gelu","text":"struct Gelu <: ScalarActivation\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.Elu","page":"Features","title":"RandomFeatures.Features.Elu","text":"struct Elu <: ScalarActivation\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.Selu","page":"Features","title":"RandomFeatures.Features.Selu","text":"struct Selu <: ScalarActivation\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.Heaviside","page":"Features","title":"RandomFeatures.Features.Heaviside","text":"struct Heaviside <: ScalarActivation\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.SmoothHeaviside","page":"Features","title":"RandomFeatures.Features.SmoothHeaviside","text":"struct SmoothHeaviside <: ScalarActivation\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.Sawtooth","page":"Features","title":"RandomFeatures.Features.Sawtooth","text":"struct Sawtooth <: ScalarActivation\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.Softplus","page":"Features","title":"RandomFeatures.Features.Softplus","text":"struct Softplus <: ScalarActivation\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.Tansig","page":"Features","title":"RandomFeatures.Features.Tansig","text":"struct Tansig <: ScalarActivation\n\n\n\n\n\n","category":"type"},{"location":"API/Features/#RandomFeatures.Features.Sigmoid","page":"Features","title":"RandomFeatures.Features.Sigmoid","text":"struct Sigmoid <: ScalarActivation\n\n\n\n\n\n","category":"type"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Thank you for considering contributing to RandomFeatures! We encourage opening issues and pull requests (PRs).","category":"page"},{"location":"contributing/#What-to-contribute?","page":"Contributing","title":"What to contribute?","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"The easiest way to contribute is by using RandomFeatures, identifying problems and opening issues;\nYou can try to tackle an existing issue. It is best to outline your proposed solution in the issue thread before implementing it in a PR;\nWrite an example or tutorial. It is likely that other users may find your use of RandomFeatures insightful;\nImprove documentation or comments if you found something hard to use;\nImplement a new feature if you need it. We strongly encourage opening an issue to make sure the administrators are on board before opening a PR with an unsolicited feature addition.","category":"page"},{"location":"contributing/#Using-git","page":"Contributing","title":"Using git","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"If you are unfamiliar with git and version control, the following guides will be helpful:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Atlassian (bitbucket) git tutorials. A set of tips and tricks for getting started with git.\nGitHub's git tutorials. A set of resources from GitHub to learn git.","category":"page"},{"location":"contributing/#Forks-and-branches","page":"Contributing","title":"Forks and branches","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Create your own fork of RandomFeatures on GitHub and check out your copy:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"$ git clone https://github.com/<your-username>/RandomFeatures.jl.git\n$ cd RandomFeatures.jl","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Now you have access to your fork of RandomFeatures through origin. Create a branch for your feature; this will hold your contribution:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"$ git checkout -b <branchname>","category":"page"},{"location":"contributing/#Some-useful-tips","page":"Contributing","title":"Some useful tips","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"When you start working on a new feature branch, make sure you start from main by running: git checkout main and git pull.\nCreate a new branch from main by using git checkout -b <branchname>.","category":"page"},{"location":"contributing/#Develop-your-feature","page":"Contributing","title":"Develop your feature","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Make sure you add tests for your code in test/ and appropriate documentation in the code and/or in docs/. Before committing your changes, you can verify their behavior by running the tests, the examples, and building the documentation locally. In addition, make sure your feature follows the formatting guidelines by running","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"julia --project=.dev .dev/climaformat.jl .","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"from the RandomFeatures.jl directory.","category":"page"},{"location":"contributing/#Squash-and-rebase","page":"Contributing","title":"Squash and rebase","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"When your PR is ready for review, clean up your commit history by squashing and make sure your code is current with RandomFeatures.jl main by rebasing. The general rule is that a PR should contain a single commit with a descriptive message.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"To make sure you are up to date with main, you can use the following workflow:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"$ git checkout main\n$ git pull\n$ git checkout <name_of_local_branch>\n$ git rebase main","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"This may create conflicts with the local branch. The conflicted files will be outlined by git. To resolve conflicts, we have to manually edit the files (e.g. with vim). The conflicts will appear between >>>>, ===== and <<<<<. We need to delete these lines and pick what version we want to keep.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"To squash your commits, you can use the following command:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"$ git rebase -i HEAD~n","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"where n is the number of commits you need to squash into one. Then, follow the instructions in the terminal. For example, to squash 4 commits:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"$ git rebase -i HEAD~4","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"will open the following file in (typically) vim:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"   pick 01d1124 <commit message 1>\n   pick 6340aaa <commit message 2>\n   pick ebfd367 <commit message 3>\n   pick 30e0ccb <commit message 4>\n\n   # Rebase 60709da..30e0ccb onto 60709da\n   #\n   # Commands:\n   #  p, pick = use commit\n   #  e, edit = use commit, but stop for amending\n   #  s, squash = use commit, but meld into previous commit\n   #\n   # If you remove a line here THAT COMMIT WILL BE LOST.\n   # However, if you remove everything, the rebase will be aborted.\n##","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"We want to keep the first commit and squash the last 3. We do so by changing the last three commits to squash and then do :wq on vim.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"   pick 01d1124 <commit message 1>\n   squash 6340aaa <commit message 2>\n   squash ebfd367 <commit message 3>\n   squash 30e0ccb <commit message 4>\n\n   # Rebase 60709da..30e0ccb onto 60709da\n   #\n   # Commands:\n   #  p, pick = use commit\n   #  e, edit = use commit, but stop for amending\n   #  s, squash = use commit, but meld into previous commit\n   #\n   # If you remove a line here THAT COMMIT WILL BE LOST.\n   # However, if you remove everything, the rebase will be aborted.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Then in the next screen that appears, we can just delete all messages that we do not want to show in the commit. After this is done and we are back to  the console, we have to force push. We need to force push because we rewrote the local commit history.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"$ git push -u origin <name_of_local_branch> --force","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"You can find more information about squashing here.","category":"page"},{"location":"contributing/#Unit-testing","page":"Contributing","title":"Unit testing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Currently a number of checks are run per commit for a given PR.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"JuliaFormatter checks if the PR is formatted with .dev/climaformat.jl.\nDocumentation rebuilds the documentation for the PR and checks if the docs are consistent and generate valid output.\nUnit Tests run subsets of the unit tests defined in tests/, using Pkg.test(). The tests are run in parallel to ensure that they finish in a reasonable time. The tests only run the latest commit for a PR, branch and will kill any stale jobs on push. These tests are only run on linux (Ubuntu LTS).","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Unit tests are run against every new commit for a given PR, the status of the unit-tests are not checked during the merge process but act as a sanity check for developers and reviewers. Depending on the content changed in the PR, some CI checks that are not necessary will be skipped.  For example doc only changes do not require the unit tests to be run.","category":"page"},{"location":"contributing/#The-merge-process","page":"Contributing","title":"The merge process","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"We use bors to manage merging PR's in the the RandomFeatures repo. If you're a collaborator and have the necessary permissions, you can type bors try in a comment on a PR to have integration test suite run on that PR, or bors r+ to try and merge the code.  Bors ensures that all integration tests for a given PR always pass before merging into main. The integration tests currently run example cases in examples/. Any breaking changes will need to also update the examples/, else bors will fail.","category":"page"},{"location":"API/Methods/#Methods","page":"Methods","title":"Methods","text":"","category":"section"},{"location":"API/Methods/","page":"Methods","title":"Methods","text":"CurrentModule = RandomFeatures.Methods","category":"page"},{"location":"API/Methods/","page":"Methods","title":"Methods","text":"    RandomFeatureMethod\n    Fit\n    get_random_feature\n    get_batch_sizes\n    get_batch_size\n    get_regularization\n    sample(rfm::RandomFeatureMethod)\n    get_feature_factors\n    get_coeffs\n    fit\n    predict\n    predictive_mean\n    predictive_cov\n    predict_prior\n    predict_prior_mean\n    predict_prior_cov","category":"page"},{"location":"API/Methods/#RandomFeatures.Methods.RandomFeatureMethod","page":"Methods","title":"RandomFeatures.Methods.RandomFeatureMethod","text":"struct RandomFeatureMethod\n\nHolds configuration for the random feature fit\n\nrandom_feature::RandomFeature\nThe random feature object\nbatch_sizes::Dict\nA dictionary specifying the batch sizes. Must contain \"train\", \"test\", and \"feature\" keys\nregularization::Real\nA non-negative, additive regularization parameter used during the fit method in the linear solve\n\n\n\n\n\n","category":"type"},{"location":"API/Methods/#RandomFeatures.Methods.Fit","page":"Methods","title":"RandomFeatures.Methods.Fit","text":"struct Fit\n\nHolds the coefficients and matrix decomposition that describe a set of fitted random features.\n\nfeature_factors::Decomposition\nThe LinearAlgreba matrix decomposition of (1 / m) * Feature^T * Feature + regularization * I\ncoeffs::AbstractVector\nCoefficients of the fit to data\n\n\n\n\n\n","category":"type"},{"location":"API/Methods/#RandomFeatures.Methods.get_random_feature","page":"Methods","title":"RandomFeatures.Methods.get_random_feature","text":"get_random_feature(\n    rfm::RandomFeatureMethod\n) -> RandomFeature\n\n\ngets the random_feature field\n\n\n\n\n\n","category":"function"},{"location":"API/Methods/#RandomFeatures.Methods.get_batch_sizes","page":"Methods","title":"RandomFeatures.Methods.get_batch_sizes","text":"get_batch_sizes(rfm::RandomFeatureMethod) -> Dict\n\n\ngets the batch_sizes field\n\n\n\n\n\n","category":"function"},{"location":"API/Methods/#RandomFeatures.Methods.get_batch_size","page":"Methods","title":"RandomFeatures.Methods.get_batch_size","text":"get_batch_size(\n    rfm::RandomFeatureMethod,\n    key::AbstractString\n) -> Any\n\n\nget the specified batch size from batch_sizes field\n\n\n\n\n\n","category":"function"},{"location":"API/Methods/#RandomFeatures.Methods.get_regularization","page":"Methods","title":"RandomFeatures.Methods.get_regularization","text":"get_regularization(rfm::RandomFeatureMethod) -> Real\n\n\ngets the regularization field\n\n\n\n\n\n","category":"function"},{"location":"API/Methods/#StatsBase.sample-Tuple{RandomFeatureMethod}","page":"Methods","title":"StatsBase.sample","text":"sample(rfm::RandomFeatureMethod) -> Any\n\n\nsamples the random_feature field\n\n\n\n\n\n","category":"method"},{"location":"API/Methods/#RandomFeatures.Methods.get_feature_factors","page":"Methods","title":"RandomFeatures.Methods.get_feature_factors","text":"get_feature_factors(f::Fit) -> Decomposition\n\n\ngets the feature_factors field\n\n\n\n\n\n","category":"function"},{"location":"API/Methods/#RandomFeatures.Methods.get_coeffs","page":"Methods","title":"RandomFeatures.Methods.get_coeffs","text":"get_coeffs(f::Fit) -> AbstractVector\n\n\ngets the coeffs field\n\n\n\n\n\n","category":"function"},{"location":"API/Methods/#StatsAPI.fit","page":"Methods","title":"StatsAPI.fit","text":"fit(\n    rfm::RandomFeatureMethod,\n    input_output_pairs::EnsembleKalmanProcesses.DataContainers.PairedDataContainer;\n    decomposition_type\n) -> Fit\n\n\nFits a RandomFeatureMethod to input-output data, optionally provide a preferred LinearAlgebra matrix decomposition. Returns a Fit object.\n\n\n\n\n\n","category":"function"},{"location":"API/Methods/#StatsAPI.predict","page":"Methods","title":"StatsAPI.predict","text":"predict(\n    rfm::RandomFeatureMethod,\n    fit::Fit,\n    new_inputs::EnsembleKalmanProcesses.DataContainers.DataContainer\n) -> Tuple{Matrix{Float64}, Matrix{Float64}}\n\n\nMakes a prediction of mean and (co)variance of fitted features on new input data\n\n\n\n\n\n","category":"function"},{"location":"API/Methods/#RandomFeatures.Methods.predictive_mean","page":"Methods","title":"RandomFeatures.Methods.predictive_mean","text":"predictive_mean(\n    rfm::RandomFeatureMethod,\n    fit::Fit,\n    new_inputs::EnsembleKalmanProcesses.DataContainers.DataContainer\n) -> Matrix{Float64}\n\n\nMakes a prediction of mean of fitted features on new input data\n\n\n\n\n\n","category":"function"},{"location":"API/Methods/#RandomFeatures.Methods.predictive_cov","page":"Methods","title":"RandomFeatures.Methods.predictive_cov","text":"predictive_cov(\n    rfm::RandomFeatureMethod,\n    fit::Fit,\n    new_inputs::EnsembleKalmanProcesses.DataContainers.DataContainer\n) -> Tuple{Matrix{Float64}, Any}\n\n\nMakes a prediction of (co)variance of fitted features on new input data\n\n\n\n\n\n","category":"function"},{"location":"API/Methods/#RandomFeatures.Methods.predict_prior","page":"Methods","title":"RandomFeatures.Methods.predict_prior","text":"predict_prior(\n    rfm::RandomFeatureMethod,\n    new_inputs::EnsembleKalmanProcesses.DataContainers.DataContainer\n) -> Tuple{Matrix{Float64}, Matrix{Float64}}\n\n\nMakes a prediction of mean and (co)variance with unfitted features on new input data\n\n\n\n\n\n","category":"function"},{"location":"API/Methods/#RandomFeatures.Methods.predict_prior_mean","page":"Methods","title":"RandomFeatures.Methods.predict_prior_mean","text":"predict_prior_mean(\n    rfm::RandomFeatureMethod,\n    new_inputs::EnsembleKalmanProcesses.DataContainers.DataContainer\n) -> Matrix{Float64}\n\n\nMakes a prediction of mean with unfitted features on new input data\n\n\n\n\n\n","category":"function"},{"location":"API/Methods/#RandomFeatures.Methods.predict_prior_cov","page":"Methods","title":"RandomFeatures.Methods.predict_prior_cov","text":"predict_prior_cov(\n    rfm::RandomFeatureMethod,\n    new_inputs::EnsembleKalmanProcesses.DataContainers.DataContainer\n) -> Matrix{Float64}\n\n\nMakes a prediction of (co)variance with unfitted features on new input data\n\n\n\n\n\n","category":"function"},{"location":"#RandomFeatures","page":"Home","title":"RandomFeatures","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A julia package to construct and apply random feature methods for regression. RandomFeatures can be viewed as an approximation of kernel methods. They can be used both as a substitution in Kernel ridge regression and Gaussian Process regresison. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Module Purpose\nRandomFeatures Container of all tools\nSamplers Samplers for constrained probability distributions\nFeatures Builds feature functions from input data\nMethods Fits features to output data, and prediction on new inputs\nUtilities Utilities to aid batching, and matrix decompositions","category":"page"},{"location":"#Highlights","page":"Home","title":"Highlights","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A flexible probability distribution backend with which to sample features, with a comprehensive API\nA library of modular scalar functions to choose from\nMethods for solving ridge regression or Gaussian Process regression problem, with functions for producing predictive means and (co)variances using fitted features. \nExamples that demonstrate using the package EnsembleKalmanProcesses.jl to optimize hyperparameters of the probability distribution.","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"RandomFeatures.jl is being developed by the Climate Modeling Alliance. The main developers are Oliver R. A. Dunbar and Thomas Jackson, with acknowledgement that the code was based on a python repository developed by Oliver R. A. Dunbar, Maya Mutic, and Nicholas H. Nelsen.","category":"page"},{"location":"installation_instructions/#Installation","page":"Installation instructions","title":"Installation","text":"","category":"section"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"RandomFeatures.jl is a not a registered Julia package. To install perform the following in the julia command prompt","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"julia> ]\n(v1.8) pkg> add https://github.com/CliMA/RandomFeatures.jl\n(v1.8) pkg> instantiate","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"This will install the latest version of the package Git repository","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"You can run the tests via the package manager by:","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"julia> ]\n(v1.8) pkg> test RandomFeatures","category":"page"},{"location":"installation_instructions/#Cloning-the-repository","page":"Installation instructions","title":"Cloning the repository","text":"","category":"section"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"If you are interested in getting your hands dirty and modifying the code then, you can also clone the repository and then instantiate, e.g.,","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"> cd RandomFeatures.jl\n> julia --project -e 'using Pkg; Pkg.instantiate()'","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"info: Do I need to clone the repository?\nMost times, cloning the repository in not necessary. If you only want to use the package's functionality, adding the packages as a dependency on your project is enough.","category":"page"},{"location":"installation_instructions/#Running-the-test-suite","page":"Installation instructions","title":"Running the test suite","text":"","category":"section"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"You can run the package's tests:","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"> julia --project -e 'using Pkg; Pkg.test()'","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"Alternatively, you can do this from within the repository:","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"> julia --project\njulia> ]\n(RandomFeatures) pkg> test","category":"page"},{"location":"installation_instructions/#Building-the-documentation-locally","page":"Installation instructions","title":"Building the documentation locally","text":"","category":"section"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"Once the project is built, you can build the project documentation under the docs/ sub-project:","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"> julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'\n> julia --project=docs/ docs/make.jl","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"The locally rendered HTML documentation can be viewed at docs/build/index.html","category":"page"},{"location":"installation_instructions/#Running-repository-examples","page":"Installation instructions","title":"Running repository examples","text":"","category":"section"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"We have a selection of examples, found within the examples/ directory to demonstrate different use of our toolbox. Each example directory contains a Project.toml","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"To build with the latest RandomFeatures.jl release:","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"> cd examples/example-name/\n> julia --project -e 'using Pkg; Pkg.instantiate()'\n> julia --project example-file-name.jl","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"If you wish to run a local modified version of RandomFeatures.jl then try the following (starting from the RandomFeatures.jl package root)","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"> cd examples/example-name/\n> julia --project \n> julia> ]\n> (example-name)> rm RandomFeatures.jl\n> (example-name)> dev ../..\n> (example-name)> instantiate","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"followed by","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"> julia --project example-file-name.jl","category":"page"}]
}
